{"version":3,"file":"ProjectInput.js","sourceRoot":"","sources":["../src/ProjectInput.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport {Post} from './validators.js';\r\nimport { ValidationOptions } from 'class-validator';\r\nimport {Resource, ResourceStorage} from './resource.js'\r\n// autobind decorator\r\nexport function autobind(_: any, _2: string, descriptor: PropertyDescriptor) {\r\n  const originalMethod = descriptor.value;\r\n  const adjDescriptor: PropertyDescriptor = {\r\n    configurable: true,\r\n    get() {\r\n      const boundFn = originalMethod.bind(this);\r\n      return boundFn;\r\n    },\r\n  };\r\n  return adjDescriptor;\r\n}\r\n\r\n// ProjectInput Class\r\nexport class ProjectInput {\r\n  //   templateElement: HTMLTemplateElement;\r\n  hostElement: HTMLDivElement;\r\n  element: HTMLFormElement;\r\n  nameInputElement: HTMLInputElement;\r\n  amountInputElement: HTMLInputElement;\r\n    // peopleInputElement: HTMLInputElement;\r\n  \r\n  constructor() {\r\n    // this.templateElement = document.getElementById(\r\n    //   'project-input'\r\n    // )! as HTMLTemplateElement;\r\n    this.hostElement = document.getElementById(\"status\")! as HTMLDivElement;\r\n\r\n    // const importedNode = document.importNode(\r\n    //   this.templateElement.content,\r\n    //   true\r\n    // );\r\n    this.element = document.querySelector(\"#formInsert\") as HTMLFormElement;\r\n    // this.element.id = 'user-input';\r\n    if (this.element == null) console.log(\"null element\");\r\n    this.nameInputElement = this.element?.querySelector(\r\n      \"#type\"\r\n    ) as HTMLInputElement;\r\n    if (this.nameInputElement == null) console.log(\"null element\");\r\n    this.amountInputElement = this.element.querySelector(\r\n      \"#amountInsertion\"\r\n    ) as HTMLInputElement;\r\n    // this.peopleInputElement = this.element.querySelector(\r\n    //   '#people'\r\n    // ) as HTMLInputElement;\r\n\r\n    this.configure();\r\n    // this.attach();\r\n  }\r\n  public gatherUserInput(): [string, number] | void {\r\n    const enteredName = this.nameInputElement.value;\r\n    const enteredAmount = this.amountInputElement.value;\r\n    // const enteredPeople = this.peopleInputElement.value;\r\n\r\n    // if (\r\n    //   enteredName.trim().length === 1 ||\r\n    //   enteredAmount.trim().length === 0\r\n    //   //   ||enteredPeople.trim().length === 0\r\n    // ) {\r\n    //   alert(\"Invalid input, please try again!\");\r\n    //   return;\r\n    // } else }\r\n      return [enteredName, +enteredAmount];\r\n    // }\r\n  }\r\n\r\n  public clearInputs() {\r\n    this.nameInputElement.value = \"\";\r\n    this.amountInputElement.value = \"\";\r\n    // this.peopleInputElement.value = '';\r\n  }\r\n\r\n  @autobind\r\n  public submitHandler(event: Event) {\r\n    event.preventDefault();\r\n    const userInput = this.gatherUserInput();\r\n    if (Array.isArray(userInput)) {\r\n      let validator = new Post();\r\n      [validator.title,validator.amount] = userInput;\r\n      if(validator.validate())\r\n      {\r\n       data.addResource(validator.title,validator.amount);\r\n       console.log(\"add\");\r\n      }\r\n      this.clearInputs();\r\n      console.log(data.getResources);\r\n    }\r\n    else\r\n    {\r\n      console.log(userInput);\r\n    }\r\n    return userInput;\r\n  }\r\n\r\n  public configure() {\r\n    this.element.addEventListener(\"submit\", this.submitHandler);\r\n  }\r\n\r\n  //   private attach() {\r\n  //     this.hostElement.insertAdjacentElement('afterbegin', this.element);\r\n  //   }\r\n  \r\n}\r\n\r\n// export declare var data : ResourceStorage;\r\nconst data = ResourceStorage.getInstance();\r\n\r\nconst prjInput = new ProjectInput();\r\n\r\n"]}