{"version":3,"file":"resource.js","sourceRoot":"","sources":["../src/resource.ts"],"names":[],"mappings":";;;AAGA,MAAa,QAAQ;IAInB,YAAY,IAAY,EAAE,MAAc;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IACD,IAAW,oBAAoB,CAAC,MAAc;QAC5C,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC;IACxB,CAAC;IACD,IAAW,eAAe;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,IAAW,iBAAiB;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;CAEF;AAlBD,4BAkBC;AACD,MAAa,eAAe;IAK1B;QAJQ,cAAS,GAAe,EAAE,CAAC;QAC3B,cAAS,GAAe,EAAE,CAAC;IAGZ,CAAC;IAExB,MAAM,CAAC,WAAW;QAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,WAAW,CAAC,UAAoB;QAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,KAAa,EAAE,MAAc;QACvC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAC9B,KAAK,EACL,MAAM;QACN,uBAAuB;SACxB,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjC,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,SAAS,EAAE;YACvC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;SACpC;IACH,CAAC;IACD,IAAI,YAAY;QACd,IAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe;YACpC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;;YACpC,OAAO,MAAM,CAAC;IACrB,CAAC;CACF;AAnCD,0CAmCC;AAED,6CAA6C;AAC7C,wCAAwC;AAGxC,qDAAqD;AACrD,iCAAiC;AACjC,6CAA6C;AAC7C,WAAW;AACX,iEAAiE;AACjE,IAAI;AACJ,8DAA8D","sourcesContent":["// Project State Management\r\ntype Listener = (items: Resource[]) => void;\r\n\r\nexport class Resource {\r\n  private name: string;\r\n  private amount: number;\r\n\r\n  constructor(name: string, amount: number) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n  }\r\n  public set updateResourceAmount(amount: number) {\r\n    this.amount += amount;\r\n  }\r\n  public get getResourceName() {\r\n    return this.name;\r\n  }\r\n  public get getResourceAmount() {\r\n    return this.amount;\r\n  }\r\n\r\n}\r\nexport class ResourceStorage {\r\n  private listeners: Listener[] = [];\r\n  private resources: Resource[] = [];\r\n  private static instance: ResourceStorage;\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance() {\r\n    if (this.instance) {\r\n      return this.instance;\r\n    }\r\n    this.instance = new ResourceStorage();\r\n    return this.instance;\r\n  }\r\n\r\n  addListener(listenerFn: Listener) {\r\n    this.listeners.push(listenerFn);\r\n  }\r\n\r\n  addResource(title: string, amount: number) {\r\n    const newResource = new Resource(\r\n      title,\r\n      amount\r\n      // ProjectStatus.Active\r\n    );\r\n    this.resources.push(newResource);\r\n    for (const listenerFn of this.listeners) {\r\n      listenerFn(this.resources.slice());\r\n    }\r\n  }\r\n  get getResources(){\r\n    if(this.resources[0].getResourceName)\r\n    return this.resources[0].getResourceName;\r\n    else return \"null\";\r\n  }\r\n}\r\n\r\n// export declare var data : ResourceStorage;\r\n// data = ResourceStorage.getInstance();\r\n\r\n\r\n// const item: Resource = new Resource(\"water\", 100);\r\n// item.updateResourceAmount = 4;\r\n// let p = document.getElementById(\"status\");\r\n// if (p) {\r\n//   p.innerHTML = item.getResourceAmount + item.getResourceName;\r\n// }\r\n// console.log(item.getResourceAmount + item.getResourceName);\r\n"]}