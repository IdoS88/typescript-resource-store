{"version":3,"file":"resource.js","sourceRoot":"","sources":["../src/resource.ts"],"names":[],"mappings":"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","sourcesContent":["import { IsInt } from \"class-validator\";\r\n\r\n// Project State Management\r\ntype Listener = (items: Resource[]) => void;\r\n\r\nexport class Resource {\r\n  [k: string]: any;\r\n  private name: string;\r\n  @IsInt()\r\n  private amount: number;\r\n\r\n  constructor(name: string, amount: number) {\r\n    this.name = name;\r\n    this.amount = amount;\r\n  }\r\n  public set updateResourceAmount(@isAnInteger amount: number) {\r\n    this.amount += amount;\r\n  }\r\n  public get getResourceName() {\r\n    return this.name;\r\n  }\r\n  public get getResourceAmount() {\r\n    return this.amount;\r\n  }\r\n}\r\nexport class ResourceStorage {\r\n  private listeners: Listener[] = [];\r\n  private resources: Resource[] = [];\r\n  private static instance: ResourceStorage;\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance() {\r\n    if (this.instance) {\r\n      return this.instance;\r\n    }\r\n    this.instance = new ResourceStorage();\r\n    return this.instance;\r\n  }\r\n\r\n  addListener(listenerFn: Listener) {\r\n    this.listeners.push(listenerFn);\r\n  }\r\n\r\n  addResource(title: string, amount: number) {\r\n    // create instance of resource\r\n    const nr = new Resource(\r\n      title,\r\n      amount\r\n      // ProjectStatus.Active\r\n    );\r\n    // first checks if input isn't for the first item of resource storage array or if it's of an existing item\r\n    //because there are 2 options wether we want to add a new item or update existing item\r\n    if (\r\n      Array.isArray(this.getResources) &&\r\n      this.getResources.length !== 0 &&\r\n      this.getResources.some(function (r) {\r\n        return r.getResourceName === title;\r\n      })\r\n    ) {\r\n      // update item\r\n      this.UpdateExistingItem = nr;\r\n    } else if (this.resources.push(nr)) {\r\n      console.log(\"push new item\");\r\n      // add a new item to resources array\r\n    }\r\n\r\n    for (const listenerFn of this.listeners) {\r\n      (this as any)[listenerFn.name](this.resources.slice());\r\n      // console.log(listenerFn);\r\n    }\r\n    return true;\r\n  }\r\n  get getResources() {\r\n    if (this.resources) return this.resources;\r\n    else return null;\r\n  }\r\n  set setResources(array: Resource[]) {\r\n    this.resources = array;\r\n  }\r\n  get getResourcesLength(): number {\r\n    return this.resources.length;\r\n  }\r\n  // uniqByReduce(array: Resource[]) {\r\n  //   this.setResources = array.reduce((acc: Resource[], cur: Resource) => {\r\n  //     if (!acc.includes(cur)) {\r\n  //       acc.push(cur);\r\n  //     } else if (\r\n  //       acc.slice().filter(function (r) {\r\n  //         return r.getResourceName === cur.getResourceName;\r\n  //       }).length > 1\r\n  //     ) {\r\n  //       alert(\r\n  //         `update given resource: ${cur.getResourceName} with given amount: ${cur.getResourceAmount}`\r\n  //       );\r\n  //       console.log(\r\n  //         `update given resource: ${cur.getResourceName} with given amount: ${cur.getResourceAmount}`\r\n  //       );\r\n  //       // checks wether checked resource included in the array and just update it's amount\r\n  //       const i = acc.findIndex(\r\n  //         (r) => r.getResourceName === cur.getResourceName\r\n  //       );\r\n  //       if (cur.getResourceAmount >= acc[i].getResourceAmount) {\r\n  //         // index must be above -1 becuase it was questioned in the last if statement\r\n  //         acc[i] = acc.pop() as Resource;\r\n  //       } else {\r\n  //         acc.pop();\r\n  //         alert(\r\n  //           \"Cannot update amount less than actual amount. for that please withdraw the amount that been taken\"\r\n  //         );\r\n  //       }\r\n  //     }\r\n  //     return acc;\r\n  //   }, []);\r\n  // }\r\n  set UpdateExistingItem(r: Resource) {\r\n    //a function to update existing item amount\r\n    const i = this.resources.findIndex(\r\n      (checked) => checked.getResourceName === r.getResourceName\r\n    );\r\n    // find existing item to be able to update\r\n\r\n    if (Array.isArray(this.getResources)) {\r\n      // stores previous amount to add new amount and for log porpouses\r\n      const previousAmount = this.getResources[i].getResourceAmount;\r\n      const sum = r.getResourceAmount + previousAmount;\r\n\r\n      alert(\r\n        `update given resource: ${r.getResourceName} with given amount: ${sum}`\r\n      );\r\n      console.log(\r\n        `update given resource: ${r.getResourceName} with given amount: ${sum}`\r\n      );\r\n\r\n      this.getResources[i].updateResourceAmount = r.getResourceAmount;\r\n      return;\r\n    } else {\r\n      throw new Error(\"Update failed\");\r\n    }\r\n  }\r\n}\r\n\r\n// export declare var data : ResourceStorage;\r\n// data = ResourceStorage.getInstance();\r\n\r\n// const item: Resource = new Resource(\"water\", 100);\r\n// item.updateResourceAmount = 4;\r\n// let p = document.getElementById(\"status\");\r\n// if (p) {\r\n//   p.innerHTML = item.getResourceAmount + item.getResourceName;\r\n// }\r\n// console.log(item.getResourceAmount + item.getResourceName);\r\n"]}